{"version":3,"sources":["index.less","App.less","components/Navbar.jsx","pages/Home/Home.jsx","pages/Events/components/EventSection.jsx","pages/Events/Events.jsx","pages/Team/Team.jsx","pages/SARA/SARA.jsx","pages/Contact/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","renderAs","Item","to","Component","Home","color","size","Body","subtitle","React","EventSection","Column","this","props","name","Events","Team","SARA","Contact","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8HAAAA,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,oJCKtBC,E,iLAEjB,OACE,kBAAC,QAAD,CAAOC,SAAS,OACd,kBAAC,QAAMC,KAAP,KACE,kBAAC,IAAD,CAAMC,GAAG,WAAT,WAEF,kBAAC,QAAMD,KAAP,KACE,kBAAC,IAAD,CAAMC,GAAG,SAAT,SAEF,kBAAC,QAAMD,KAAP,KACE,kBAAC,UAAD,KACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,kBAGJ,kBAAC,QAAMD,KAAP,KACE,kBAAC,IAAD,CAAMC,GAAG,SAAT,SAEF,kBAAC,QAAMD,KAAP,KACE,kBAAC,IAAD,CAAMC,GAAG,YAAT,iB,GAnB0BC,aCAfC,E,iLAEjB,OACE,6BACE,kBAAC,OAAD,CAAMC,MAAM,OAAOC,KAAK,cACtB,kBAAC,OAAKC,KAAN,KACE,kBAAC,YAAD,KACE,kBAAC,UAAD,qBACA,kBAAC,UAAD,CAASC,UAAQ,GAAjB,cAIN,kBAAC,EAAD,MACA,kBAAC,YAAD,W,GAb0BC,IAAMN,WCFnBO,E,iLAEjB,OACE,kBAAC,UAAD,KACE,kBAAC,UAAD,KACE,kBAAC,UAAQC,OAAT,CAAgBL,KAAM,GACpB,kBAAC,UAAD,CAASA,KAAM,GAAIM,KAAKC,MAAMC,OAEhC,kBAAC,UAAQH,OAAT,KACE,kBAAC,MAAD,a,GAT8BR,aCErBY,E,iLAEjB,OACE,kBAAC,YAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcD,KAAK,iCACnB,kBAAC,EAAD,CAAcA,KAAK,iCACnB,kBAAC,EAAD,CAAcA,KAAK,uBACnB,kBAAC,EAAD,CAAcA,KAAK,yBACnB,kBAAC,EAAD,CAAcA,KAAK,kC,GATSL,IAAMN,WCDrBa,E,iLAEjB,OACE,kBAAC,YAAD,KACE,kBAAC,EAAD,W,GAJ0Bb,aCAbc,E,iLAEjB,OACE,kBAAC,YAAD,KACE,kBAAC,EAAD,W,GAJ0Bd,aCAbe,E,iLAEjB,OACE,kBAAC,YAAD,KACE,kBAAC,EAAD,W,GAJ6Bf,aCoBtBgB,MAZf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWlB,IACjC,kBAAC,IAAD,CAAOiB,KAAK,QAAQC,UAAWL,IAC/B,kBAAC,IAAD,CAAOI,KAAK,UAAUC,UAAWP,IACjC,kBAAC,IAAD,CAAOM,KAAK,QAAQC,UAAWN,IAC/B,kBAAC,IAAD,CAAOK,KAAK,WAAWC,UAAWJ,MCPpBK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.601848f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index.386bb338.less\";","module.exports = __webpack_public_path__ + \"static/media/App.d671fbde.less\";","import React, { Component } from \"react\";\r\n\r\nimport { Level, Heading } from \"react-bulma-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <Level renderAs=\"nav\">\r\n        <Level.Item>\r\n          <Link to=\"/events\">Events</Link>\r\n        </Level.Item>\r\n        <Level.Item>\r\n          <Link to=\"/sara\">SARA</Link>\r\n        </Level.Item>\r\n        <Level.Item>\r\n          <Heading>\r\n            <Link to=\"/\">Team Phoenix</Link>\r\n          </Heading>\r\n        </Level.Item>\r\n        <Level.Item>\r\n          <Link to=\"/team\">Team</Link>\r\n        </Level.Item>\r\n        <Level.Item>\r\n          <Link to=\"/contact\">Contact</Link>\r\n        </Level.Item>\r\n      </Level>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container, Heading, Hero, Level } from \"react-bulma-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\nexport default class Home extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Hero color=\"dark\" size=\"fullheight\">\r\n          <Hero.Body>\r\n            <Container>\r\n              <Heading>Team Phoenix</Heading>\r\n              <Heading subtitle>FRC 703</Heading>\r\n            </Container>\r\n          </Hero.Body>\r\n        </Hero>\r\n        <Navbar></Navbar>\r\n        <Container></Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Box, Columns, Section, Heading } from \"react-bulma-components\";\r\n\r\nexport default class EventSection extends Component {\r\n  render() {\r\n    return (\r\n      <Section>\r\n        <Columns>\r\n          <Columns.Column size={8}>\r\n            <Heading size={4}>{this.props.name}</Heading>\r\n          </Columns.Column>\r\n          <Columns.Column>\r\n            <Box></Box>\r\n          </Columns.Column>\r\n        </Columns>\r\n      </Section>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Container } from \"react-bulma-components\";\r\nimport EventSection from \"./components/EventSection\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\nexport default class Events extends React.Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Navbar></Navbar>\r\n        <EventSection name=\"FIM District Gibraltar Event\"></EventSection>\r\n        <EventSection name=\"FIM District Alpena Event #2\"></EventSection>\r\n        <EventSection name=\"ROBO-CON Offseason\"></EventSection>\r\n        <EventSection name=\"Mid Mitten Roborodeo\"></EventSection>\r\n        <EventSection name=\"Great Lakes Bay Bot Bash\"></EventSection>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bulma-components\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\nexport default class Team extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Navbar></Navbar>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bulma-components\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\nexport default class SARA extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Navbar></Navbar>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bulma-components\";\r\nimport Navbar from \"../../components/Navbar\";\r\n\r\nexport default class Contact extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Navbar></Navbar>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport \"./App.less\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\n\r\nimport { Container } from \"react-bulma-components\";\r\n\r\nimport Home from \"./pages/Home/Home\";\r\nimport Events from \"./pages/Events/Events\";\r\nimport Team from \"./pages/Team/Team\";\r\nimport SARA from \"./pages/SARA/SARA\";\r\nimport Contact from \"./pages/Contact/Contact\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Route exact path=\"/\" component={Home}></Route>\r\n      <Route path=\"/sara\" component={SARA}></Route>\r\n      <Route path=\"/events\" component={Events}></Route>\r\n      <Route path=\"/team\" component={Team}></Route>\r\n      <Route path=\"/contact\" component={Contact}></Route>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.less\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"react-bulma-components/dist/react-bulma-components.min.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}